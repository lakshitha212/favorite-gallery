swagger: '2.0'
info:
  description: >-
    Please note that different services are running on different docker
    containers. Hence please use the correct port for relevant service. example
    : user related services are running on 8082
  version: 1.0.0
  title: Favorite Gallery API Doc
  contact:
    email: chameera.lakshitha212@gmail.com
host: 127.0.0.1:8082
basePath: /
tags:
  - name: User Service
    description: Operations related to user service

schemes:
  - http

paths:
  /get-entries:
    get:
      tags:
        - User Service
      summary: List All Entries
      description: Returns all entries
      operationId: getEntries
      produces:
        - application/json
      responses:
        '201':
          description: successful operation
          schema:
            type: object
            properties:
              meta_data:
                type: string
                enum:
                  - from cache
              entries:
                type: object
                properties: 
                  _id:
                    type: string
                  favoriteEntries:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                        picture:
                          type: string
                        _isFavourite:
                          type: boolean
                  createdAt:
                    type: number
        '400':
          description: bad request
          schema:
            type: object
            properties:
              error:
                type: string
        '404':
          description: not found
          schema:
            type: object
            properties:
              error:
                type: string
        '500':
          description: internal server error
          schema:
            type: object
            properties:
              error:
                type: string
  /get-user:
    get:
      tags:
        - User Service
      summary: Get Single User
      description: Returns a user object.
      operationId: getUser
      produces:
        - application/json
      parameters:
        - in: query
          name: userToken
          required: true
          schema:
            type: string
          description: The unique ID
      responses:
        '201':
          description: successful operation
          schema:
            type: object
            properties:
              user:
                type: object
                properties: 
                  _id:
                    type: string
                  favoriteEntries:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                        picture:
                          type: string
                        _isFavourite:
                          type: boolean
                  createdAt:
                    type: number
        '400':
          description: bad request
          schema:
            type: object
            properties:
              error:
                type: string
        '404':
          description: not found
          schema:
            type: object
            properties:
              error:
                type: string
        '500':
          description: internal server error
          schema:
            type: object
            properties:
              error:
                type: string
  /create-user:
    post:
      tags:
        - User Service
      summary: Create a user
      description: Returns single user
      operationId: createUser
      produces:
        - application/json
      responses:
        '201':
          description: successful operation
          schema:
            type: object
            properties:
              entries:
                type: object
                properties:
                  id:
                    type: string
                  favoriteEntries:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                        picture:
                          type: string
                        _isFavourite:
                          type: boolean
                  createdAt:
                    type: number
        '400':
          description: bad request
          schema:
            type: object
            properties:
              error:
                type: string
        '404':
          description: not found
          schema:
            type: object
            properties:
              error:
                type: string
        '500':
          description: internal server error
          schema:
            type: object
            properties:
              error:
                type: string     
  
  /update-entry:
    put:
      tags:
        - User Service
      summary: Update User Entry Details
      operationId: updateEntry
      produces:
        - application/json
      parameters:
        - in: query
          name: userToken
          required: true
          schema:
            type: string
          description: The Unique User ID
        - in: body
          name: body
          description: Update Single Entry Details
          schema:
            type: object
            properties:
              id:
                type: number
              picture:
                type: string
              _isFavourite:
                type: boolean
            example:
              id: some_entry_id
              picture: url
              _isFavourite: true
      responses:
        '201':
          description: successful operation
          schema:
            type: object
            properties:
              entries:
                type: object
                properties: 
                  _id:
                    type: string
                  entries:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                        message:
                          type: string
                        picture:
                          type: string
                        pictureSmall:
                          type: string
                        pictureMedium:
                          type: string
                        pictureStored:
                          type: string
                        timestamp:
                          type: number
                        _isFavourite:
                          type: boolean
                  favoriteEntries:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                        message:
                          type: string
                        picture:
                          type: string
                        pictureSmall:
                          type: string
                        pictureMedium:
                          type: string
                        pictureStored:
                          type: string
                        timestamp:
                          type: number
                        _isFavourite:
                          type: boolean
                  createdAt:
                    type: number
        '400':
          description: bad request
          schema:
            type: object
            properties:
              error:
                type: string
        '404':
          description: not found
          schema:
            type: object
            properties:
              error:
                type: string
        '500':
          description: internal server error
          schema:
            type: object
            properties:
              error:
                type: string
  /sort-entries:
    post:
      tags:
        - User Service
      summary: Save Sorted Image List
      description: Returns sorted image list
      operationId: sortEntries
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: userToken
          schema:
            type: object
            properties:
              userToken:
                type: String
              images:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
                    picture:
                      type: string
                    _isFavourite:
                      type: boolean
            example:
              userToken: some_user_id
              images: [{
                id: 123456,
                picture: url,
                _isFavourite: true,
              },{id: 123456,
                 picture: url,
                 _isFavourite: true,
                 }]
      responses:
        '201':
          description: successful operation
          schema:
            type: object
            properties:
              entries:
                type: object
                properties:
                  id:
                    type: string
                  favoriteEntries:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                        picture:
                          type: string
                        _isFavourite:
                          type: boolean
        '400':
          description: bad request
          schema:
            type: object
            properties:
              error:
                type: string
        '404':
          description: not found
          schema:
            type: object
            properties:
              error:
                type: string
        '500':
          description: internal server error
          schema:
            type: object
            properties:
              error:
                type: string            
definitions:
  User:
    type: object
    properties:
      id:
        type: string
      favoriteEntries:
        type: array
        items:
          type: object
          properties:
            id:
              type: number
            picture:
              type: string
            _isFavourite:
              type: boolean
      createdAt:
        type: number
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
